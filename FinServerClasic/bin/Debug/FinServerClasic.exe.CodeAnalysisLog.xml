<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="e:\program\vs\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="15.0">
 <Targets>
  <Target Name="\\10.237.2.10\users$\makar\documents\visual studio 2017\Projects\FinServer\FinServerClasic\bin\Debug\FinServerClasic.exe">
   <Modules>
    <Module Name="finserverclasic.exe">
     <Namespaces>
      <Namespace Name="FinServerClasic">
       <Types>
        <Type Name="DataBase_MSSQL" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#LogTransaction(MessageClass.Transaction)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Проверка запросов SQL на уязвимости безопасности" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2018-02-01 09:23:44Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="\\10.237.2.10\users$\makar\documents\visual studio 2017\Projects\FinServer\FinServerClasic" File="DataBaseClass.cs" Line="137">Строка запроса, переданная 'SqlCommand.SqlCommand(string)' в 'DataBase_MSSQL.LogTransaction(Transaction)', может содержать следующие переменные 't.name', 'Local2.ToString("yyyy-MM-dd hh:mm:ss")', 'base.ToString()', ''.'', 't.volume'. Если любая из этих переменных может поступать из вводимых пользователем данных, рассмотрите возможность использования хранимой процедуры или параметризованного запроса SQL вместо сборки запроса с помощью конкатенации строк.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DataBaseOLE" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2018-02-01 09:23:44Z" FixCategory="NonBreaking">
           <Issue Name="NonBreaking" Certainty="95" Level="CriticalError">Реализуйте IDisposable для 'DataBaseOLE', поскольку он создает члены следующих типов IDisposable: 'SqlConnection'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="GenerateClass" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GenerateThread()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotLockOnObjectsWithWeakIdentity" Category="Microsoft.Reliability" CheckId="CA2002" Status="Active" Created="2018-02-01 09:23:44Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="CriticalError" Path="\\10.237.2.10\users$\makar\documents\visual studio 2017\Projects\FinServer\FinServerClasic" File="GenerateClass.cs" Line="113">'GenerateClass.GenerateThread()' блокирует ссылку на тип 'string[]'. Замените ее блокировкой объекта со строгой идентификацией.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMaxGenSpeed()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotLockOnObjectsWithWeakIdentity" Category="Microsoft.Reliability" CheckId="CA2002" Status="Active" Created="2018-02-01 09:23:44Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="CriticalError" Path="\\10.237.2.10\users$\makar\documents\visual studio 2017\Projects\FinServer\FinServerClasic" File="GenerateClass.cs" Line="143">'GenerateClass.GetMaxGenSpeed()' блокирует ссылку на тип 'string[]'. Замените ее блокировкой объекта со строгой идентификацией.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#NewTransactionHendler" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2018-02-01 09:23:44Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Объявите первый параметр для 'GenerateClass.NewTransaction' как объект с именем "sender".</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Объявите второй параметр для 'GenerateClass.NewTransaction' как EventArgs или экземпляр типа, расширяющего EventArgs, и присвойте ему имя "e".</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009">
   <Name>Правильно объявите обработчики событий</Name>
   <Description>По соглашению для событий .NET предусмотрены два параметра, определяющие источник события и данные события. Сигнатуры обработчиков событий должны иметь следующую форму: void MyEventHandler(object sender, EventArgs e). Параметр "sender" всегда имеет тип System.Object, даже если есть возможность использовать более конкретный тип. Параметр "e" всегда имеет тип System.EventArgs. События, не предоставляющие данных о себе, должны использовать тип делегата System.EventHandler. Обработчики событий возвращают значение void, благодаря чему они могут отправлять каждое событие множеству целевых методов. Любое значение, возвращенное целевым объектом, будет утеряно после первого вызова.</Description>
   <Resolution Name="First">Объявите первый параметр для {0} как объект с именем "sender".</Resolution>
   <Resolution Name="Second">Объявите второй параметр для {0} как EventArgs или экземпляр типа, расширяющего EventArgs, и присвойте ему имя "e".</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182133.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotLockOnObjectsWithWeakIdentity" Category="Microsoft.Reliability" CheckId="CA2002">
   <Name>Не блокируйте слабо идентифицируемые объекты</Name>
   <Description>Не блокируйте объекты, которые могут быть перетекать через границы AppDomains или не имеют строгой идентификации.</Description>
   <Resolution Name="Default">{0} блокирует ссылку на тип {1}. Замените ее блокировкой объекта со строгой идентификацией.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182290.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalError</MessageLevel>
   <File Name="reliabilityrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001">
   <Name>Типы, которым принадлежат освобождаемые поля, должны быть освобождаемыми</Name>
   <Description>Типы, объявляющие освобождаемые члены, также должны реализовывать IDisposable. Если типу не принадлежат какие-либо неуправляемые ресурсы, нет необходимости реализовывать для него метод завершения.</Description>
   <Resolution Name="NonBreaking">Реализуйте IDisposable для {0}, поскольку он создает члены следующих типов IDisposable: {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182172.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="15.0.0.0" />
  </Rule>
  <Rule TypeName="Проверка запросов SQL на уязвимости безопасности" Category="Microsoft.Security" CheckId="CA2100">
   <Name>Проверка запросов SQL на уязвимости безопасности</Name>
   <Description>Командная строка SQL, создаваемая на основе введенных пользователем данных, уязвима к атакам типа "инъекция SQL". Microsoft SQL Server и другие серверы баз данных поддерживают хранимые процедуры и параметризованные SQL-запросы, что снижает риск атак путем внедрения.</Description>
   <Resolution Name="WithNonLiterals">Строка запроса, переданная {0} в {1}, может содержать следующие переменные {2}. Если любая из этих переменных может поступать из вводимых пользователем данных, рассмотрите возможность использования хранимой процедуры или параметризованного запроса SQL вместо сборки запроса с помощью конкатенации строк.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182310.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="15.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Категория</String>
  <String Key="Certainty">Достоверность</String>
  <String Key="CollapseAll">Свернуть все</String>
  <String Key="CheckId">ИД проверки</String>
  <String Key="Error">Ошибка</String>
  <String Key="Errors">ошибки</String>
  <String Key="ExpandAll">Развернуть все</String>
  <String Key="Help">Справка</String>
  <String Key="Line">Строка</String>
  <String Key="Messages">сообщения</String>
  <String Key="LocationNotStoredInPdb">[расположение не сохранено в PDB]</String>
  <String Key="Project">Проект</String>
  <String Key="Resolution">Разрешение</String>
  <String Key="Rule">Правило</String>
  <String Key="RuleFile">Файл правил</String>
  <String Key="RuleDescription">Описание правила</String>
  <String Key="Source">Источник</String>
  <String Key="Status">Состояние</String>
  <String Key="Target">Цель</String>
  <String Key="Warning">Предупреждение</String>
  <String Key="Warnings">предупреждения</String>
  <String Key="ReportTitle">Отчет по анализу кода</String>
 </Localized>
</FxCopReport>
